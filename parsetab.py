
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQNEGELEGTLTleftSUMSUBleftMULDIVAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : expressionexpression : expression SUM termexpression : expression SUB termexpression : termterm : term MUL factorterm : term DIV factorterm : factorfactor : INTEGERNUMBERfactor : TRUEfactor : FALSEfactor : LRB expression RRBexpression : expression EQ expressionexpression : expression GT expressionexpression : expression GE expressionexpression : expression LT expressionexpression : expression LE expressionexpression : expression NE expression'
    
_lr_action_items = {'INTEGERNUMBER':([0,8,9,10,11,12,13,14,15,16,17,18,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'TRUE':([0,8,9,10,11,12,13,14,15,16,17,18,],[6,6,6,6,6,6,6,6,6,6,6,6,]),'FALSE':([0,8,9,10,11,12,13,14,15,16,17,18,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'LRB':([0,8,9,10,11,12,13,14,15,16,17,18,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,2,3,4,5,6,7,20,21,22,23,24,25,26,27,28,29,30,],[0,-1,-4,-7,-8,-9,-10,-2,-3,-12,-13,-14,-15,-16,-17,-5,-6,-11,]),'SUM':([2,3,4,5,6,7,19,20,21,22,23,24,25,26,27,28,29,30,],[9,-4,-7,-8,-9,-10,9,-2,-3,9,9,9,9,9,9,-5,-6,-11,]),'SUB':([2,3,4,5,6,7,19,20,21,22,23,24,25,26,27,28,29,30,],[10,-4,-7,-8,-9,-10,10,-2,-3,10,10,10,10,10,10,-5,-6,-11,]),'EQ':([2,3,4,5,6,7,19,20,21,22,23,24,25,26,27,28,29,30,],[11,-4,-7,-8,-9,-10,11,-2,-3,-12,-13,-14,-15,-16,-17,-5,-6,-11,]),'GT':([2,3,4,5,6,7,19,20,21,22,23,24,25,26,27,28,29,30,],[12,-4,-7,-8,-9,-10,12,-2,-3,-12,-13,-14,-15,-16,-17,-5,-6,-11,]),'GE':([2,3,4,5,6,7,19,20,21,22,23,24,25,26,27,28,29,30,],[13,-4,-7,-8,-9,-10,13,-2,-3,-12,-13,-14,-15,-16,-17,-5,-6,-11,]),'LT':([2,3,4,5,6,7,19,20,21,22,23,24,25,26,27,28,29,30,],[14,-4,-7,-8,-9,-10,14,-2,-3,-12,-13,-14,-15,-16,-17,-5,-6,-11,]),'LE':([2,3,4,5,6,7,19,20,21,22,23,24,25,26,27,28,29,30,],[15,-4,-7,-8,-9,-10,15,-2,-3,-12,-13,-14,-15,-16,-17,-5,-6,-11,]),'NE':([2,3,4,5,6,7,19,20,21,22,23,24,25,26,27,28,29,30,],[16,-4,-7,-8,-9,-10,16,-2,-3,-12,-13,-14,-15,-16,-17,-5,-6,-11,]),'RRB':([3,4,5,6,7,19,20,21,22,23,24,25,26,27,28,29,30,],[-4,-7,-8,-9,-10,30,-2,-3,-12,-13,-14,-15,-16,-17,-5,-6,-11,]),'MUL':([3,4,5,6,7,20,21,28,29,30,],[17,-7,-8,-9,-10,17,17,-5,-6,-11,]),'DIV':([3,4,5,6,7,20,21,28,29,30,],[18,-7,-8,-9,-10,18,18,-5,-6,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'expression':([0,8,11,12,13,14,15,16,],[2,19,22,23,24,25,26,27,]),'term':([0,8,9,10,11,12,13,14,15,16,],[3,3,20,21,3,3,3,3,3,3,]),'factor':([0,8,9,10,11,12,13,14,15,16,17,18,],[4,4,4,4,4,4,4,4,4,4,28,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expression','program',1,'p_program','m_parser.py',15),
  ('expression -> expression SUM term','expression',3,'p_expression_plus','m_parser.py',24),
  ('expression -> expression SUB term','expression',3,'p_expression_minus','m_parser.py',29),
  ('expression -> term','expression',1,'p_expression_term','m_parser.py',34),
  ('term -> term MUL factor','term',3,'p_term_times','m_parser.py',39),
  ('term -> term DIV factor','term',3,'p_term_div','m_parser.py',44),
  ('term -> factor','term',1,'p_term_factor','m_parser.py',49),
  ('factor -> INTEGERNUMBER','factor',1,'p_factor_num','m_parser.py',54),
  ('factor -> TRUE','factor',1,'p_factor_true','m_parser.py',59),
  ('factor -> FALSE','factor',1,'p_factor_false','m_parser.py',64),
  ('factor -> LRB expression RRB','factor',3,'p_factor_expr','m_parser.py',69),
  ('expression -> expression EQ expression','expression',3,'p_relop_exp_eq','m_parser.py',74),
  ('expression -> expression GT expression','expression',3,'p_relop_exp_gt','m_parser.py',84),
  ('expression -> expression GE expression','expression',3,'p_relop_exp_ge','m_parser.py',89),
  ('expression -> expression LT expression','expression',3,'p_relop_exp_lt','m_parser.py',94),
  ('expression -> expression LE expression','expression',3,'p_relop_exp_le','m_parser.py',99),
  ('expression -> expression NE expression','expression',3,'p_relop_exp_ne','m_parser.py',104),
]
