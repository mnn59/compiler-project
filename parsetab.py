
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSHIFT_IFleftSHIFT_IFELSEleftSHIFT_ELSEIFLISTleftSHIFT_ELSEIFLIST2leftSHIFT_IFLOOPleftSHIFT_LVALUEleftSHIFT_IDDECleftSHIFT_ASSIGNleftIFleftELSEleftELSEIFleftCOMMArightASSIGNleftORleftANDleftEQNEleftGTLTGELEleftSUMSUBleftMULDIVMODrightNOTAND ASSIGN BOOLEAN COLON COMMA DIV ELSE ELSEIF EQ ERROR FALSE FLOAT FLOATNUMBER FOR FUNCTION GE GT ID IF IN INTEGER INTEGERNUMBER LCB LE LRB LSB LT MAIN MOD MUL NE NOT ON OR PRINT RCB RETURN RRB RSB SEMICOLON SUB SUM TRUE WHERE WHILEprogram : declist MAIN LRB RRB blockprogram : MAIN LRB RRB blockdeclist : decdeclist : declist decblock : LCB stmtlist RCBblock : LCB RCBdec : vardecdec : funcdecstmtlist : stmtstmtlist : stmtlist stmtstmt : blockstmt : vardecstmt : WHILE LRB expression RRB stmtstmt : ON LRB expression RRB LCB cases RCB SEMICOLONstmt : ON LRB expression RRB LCB RCB SEMICOLONstmt : PRINT LRB ID RRB SEMICOLONstmt : RETURN expression SEMICOLONstmt : expression SEMICOLONstmt : FOR LRB expression SEMICOLON expression SEMICOLON expression RRB stmtstmt : FOR LRB ID IN ID RRB stmtstmt : IF LRB expression RRB stmt %prec SHIFT_IFstmt : IF LRB expression RRB stmt ELSE stmt %prec SHIFT_IFELSEstmt : IF LRB expression RRB stmt elseiflist %prec SHIFT_ELSEIFLISTstmt : IF LRB expression RRB stmt elseiflist ELSE stmt %prec SHIFT_ELSEIFLIST2elseiflist : ELSEIF LRB expression RRB stmtelseiflist : elseiflist ELSEIF LRB expression RRB stmt %prec SHIFT_IFLOOPvardec : idlist COLON type SEMICOLONfuncdec : FUNCTION ID LRB paramdecslist RRB COLON type blockfuncdec : FUNCTION ID LRB RRB COLON type blockfuncdec : FUNCTION ID LRB paramdecslist RRB blockfuncdec : FUNCTION ID LRB RRB blocktype : INTEGERtype : FLOATtype : BOOLEANcase : WHERE factor COLON stmtlistcase : WHERE factor COLONcases : casecases : cases caseidlist : iddecidlist : idlist COMMA iddecparamdecslist : paramdecparamdecslist : paramdecslist COMMA paramdeciddec : ID %prec SHIFT_IDDECiddec : ID LSB expression RSBiddec : ID ASSIGN expression %prec SHIFT_IDDEClvalue : ID %prec SHIFT_LVALUElvalue : ID LSB expression RSB %prec SHIFT_LVALUEexpression : ID LSB expression RSB ASSIGN expression %prec SHIFT_ASSIGNexpression : ID ASSIGN expression %prec SHIFT_ASSIGNparamdec : ID COLON typeparamdec : ID LSB RSB COLON typeexplist : expressionexplist : explist COMMA expressionexpression : expression EQ expressionexpression : expression GT expressionexpression : expression GE expressionexpression : expression LT expressionexpression : expression LE expressionexpression : expression NE expressionexpression : lvalueexpression : lvalue ASSIGN expressionexpression : ID LRB explist RRBexpression : ID LRB RRBexpression : SUB expressionexpression : NOT expressionexpression : expression SUM expressionexpression : expression SUB expressionexpression : expression AND expressionexpression : expression OR expressionexpression : expression MUL expressionexpression : expression DIV expressionexpression : expression MOD expressionexpression : factorfactor : INTEGERNUMBERfactor : FLOATNUMBERfactor : TRUEfactor : FALSEfactor : LRB expression RRB'
    
_lr_action_items = {'MAIN':([0,2,4,5,6,12,42,70,87,108,122,139,150,],[3,11,-3,-7,-8,-4,-27,-6,-31,-5,-30,-29,-28,]),'FUNCTION':([0,2,4,5,6,12,42,70,87,108,122,139,150,],[8,8,-3,-7,-8,-4,-27,-6,-31,-5,-30,-29,-28,]),'ID':([0,2,4,5,6,8,12,15,17,18,26,30,31,32,41,42,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,79,85,87,108,109,110,111,112,113,114,115,117,118,122,127,133,139,140,142,146,147,148,150,152,154,157,162,163,164,165,169,172,173,174,176,177,178,179,180,181,183,184,186,187,188,189,],[9,9,-3,-7,-8,16,-4,9,27,27,43,27,27,27,78,-27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,78,-6,-9,-11,-12,27,43,-31,-5,-10,27,-18,27,130,27,27,135,27,-30,27,-17,-29,27,78,27,156,78,-28,-13,-16,-21,27,78,78,-23,-15,-20,-22,78,27,-14,78,78,-24,27,78,-19,78,78,-25,-26,]),'$end':([1,40,68,70,108,],[0,-2,-1,-6,-5,]),'LRB':([3,11,16,17,18,27,30,31,32,41,42,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,74,76,77,78,79,80,81,108,109,110,111,112,114,115,117,118,127,133,135,140,142,146,148,152,154,157,161,162,163,164,165,166,169,172,173,174,175,176,177,178,179,180,181,183,184,186,187,188,189,],[13,19,26,30,30,49,30,30,30,30,-27,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-6,-9,-11,-12,110,112,113,49,30,117,118,-5,-10,30,-18,30,30,30,30,30,30,-17,49,30,30,30,30,-13,-16,-21,30,30,30,30,-23,176,-15,-20,-22,30,181,30,-14,30,30,-24,30,30,-19,30,30,-25,-26,]),'COLON':([7,9,10,25,27,29,33,34,35,36,37,38,43,45,50,66,67,78,84,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,120,125,126,132,145,151,170,],[14,-43,-39,-40,-46,-60,-73,-74,-75,-76,-77,-45,82,86,-44,-64,-65,-43,121,-49,-63,-54,-55,-56,-57,-58,-59,-66,-67,-68,-69,-70,-71,-72,-61,-78,137,-47,-62,-45,-44,-48,178,]),'COMMA':([7,9,10,22,23,24,25,27,29,33,34,35,36,37,38,44,46,50,66,67,78,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,119,123,125,126,132,141,145,149,151,],[15,-43,-39,-32,-33,-34,-40,-46,-60,-73,-74,-75,-76,-77,-45,85,-41,-44,-64,-65,-43,-49,127,-63,-52,-54,-55,-56,-57,-58,-59,-66,-67,-68,-69,-70,-71,-72,-61,-78,-50,-42,-47,-62,-45,-53,-44,-51,-48,]),'LSB':([9,27,43,78,135,],[17,47,83,114,47,]),'ASSIGN':([9,27,29,78,125,135,145,],[18,48,64,115,140,48,140,]),'RRB':([13,19,22,23,24,26,27,29,33,34,35,36,37,44,46,49,65,66,67,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,119,123,125,126,128,129,130,136,141,149,151,156,171,182,185,],[20,39,-32,-33,-34,45,-46,-60,-73,-74,-75,-76,-77,84,-41,91,107,-64,-65,-49,126,-63,-52,-54,-55,-56,-57,-58,-59,-66,-67,-68,-69,-70,-71,-72,-61,-78,-50,-42,-47,-62,142,143,144,148,-53,-51,-48,163,179,186,187,]),'INTEGER':([14,82,86,121,137,],[22,22,22,22,22,]),'FLOAT':([14,82,86,121,137,],[23,23,23,23,23,]),'BOOLEAN':([14,82,86,121,137,],[24,24,24,24,24,]),'SUB':([17,18,27,28,29,30,31,32,33,34,35,36,37,38,41,42,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,75,78,79,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,125,126,127,128,129,131,132,133,134,135,136,140,141,142,145,146,148,151,152,154,155,157,162,163,164,165,169,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,],[31,31,-46,58,-60,31,31,31,-73,-74,-75,-76,-77,58,31,-27,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,58,-64,-65,31,-6,-9,-11,-12,58,-46,31,58,58,-63,58,58,58,58,58,58,58,-66,-67,58,58,-70,-71,-72,58,-78,-5,-10,31,-18,31,31,31,58,31,31,-47,-62,31,58,58,58,58,-17,58,-46,58,31,58,31,-47,31,31,58,-13,-16,58,-21,31,31,31,-23,-15,58,-20,-22,31,31,-14,31,31,-24,31,58,31,-19,58,31,31,-25,-26,]),'NOT':([17,18,30,31,32,41,42,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,79,108,109,110,111,112,114,115,117,118,127,133,140,142,146,148,152,154,157,162,163,164,165,169,172,173,174,176,177,178,179,180,181,183,184,186,187,188,189,],[32,32,32,32,32,32,-27,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-6,-9,-11,-12,32,-5,-10,32,-18,32,32,32,32,32,32,-17,32,32,32,32,-13,-16,-21,32,32,32,-23,-15,-20,-22,32,32,-14,32,32,-24,32,32,-19,32,32,-25,-26,]),'INTEGERNUMBER':([17,18,30,31,32,41,42,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,79,108,109,110,111,112,114,115,117,118,127,133,140,142,146,148,152,154,157,161,162,163,164,165,169,172,173,174,176,177,178,179,180,181,183,184,186,187,188,189,],[34,34,34,34,34,34,-27,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-6,-9,-11,-12,34,-5,-10,34,-18,34,34,34,34,34,34,-17,34,34,34,34,-13,-16,-21,34,34,34,34,-23,-15,-20,-22,34,34,-14,34,34,-24,34,34,-19,34,34,-25,-26,]),'FLOATNUMBER':([17,18,30,31,32,41,42,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,79,108,109,110,111,112,114,115,117,118,127,133,140,142,146,148,152,154,157,161,162,163,164,165,169,172,173,174,176,177,178,179,180,181,183,184,186,187,188,189,],[35,35,35,35,35,35,-27,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-6,-9,-11,-12,35,-5,-10,35,-18,35,35,35,35,35,35,-17,35,35,35,35,-13,-16,-21,35,35,35,35,-23,-15,-20,-22,35,35,-14,35,35,-24,35,35,-19,35,35,-25,-26,]),'TRUE':([17,18,30,31,32,41,42,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,79,108,109,110,111,112,114,115,117,118,127,133,140,142,146,148,152,154,157,161,162,163,164,165,169,172,173,174,176,177,178,179,180,181,183,184,186,187,188,189,],[36,36,36,36,36,36,-27,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-6,-9,-11,-12,36,-5,-10,36,-18,36,36,36,36,36,36,-17,36,36,36,36,-13,-16,-21,36,36,36,36,-23,-15,-20,-22,36,36,-14,36,36,-24,36,36,-19,36,36,-25,-26,]),'FALSE':([17,18,30,31,32,41,42,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,79,108,109,110,111,112,114,115,117,118,127,133,140,142,146,148,152,154,157,161,162,163,164,165,169,172,173,174,176,177,178,179,180,181,183,184,186,187,188,189,],[37,37,37,37,37,37,-27,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-6,-9,-11,-12,37,-5,-10,37,-18,37,37,37,37,37,37,-17,37,37,37,37,-13,-16,-21,37,37,37,37,-23,-15,-20,-22,37,37,-14,37,37,-24,37,37,-19,37,37,-25,-26,]),'LCB':([20,22,23,24,39,41,42,45,69,70,71,72,73,84,108,109,111,124,133,138,142,143,148,152,154,157,163,164,165,169,172,173,174,177,178,179,180,183,184,186,187,188,189,],[41,-32,-33,-34,41,41,-27,41,41,-6,-9,-11,-12,41,-5,-10,-18,41,-17,41,41,153,41,-13,-16,-21,41,41,-23,-15,-20,-22,41,-14,41,41,-24,41,-19,41,41,-25,-26,]),'SEMICOLON':([21,22,23,24,27,29,33,34,35,36,37,66,67,75,78,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,132,134,135,144,145,151,155,159,167,],[42,-32,-33,-34,-46,-60,-73,-74,-75,-76,-77,-64,-65,111,-46,-49,-63,-54,-55,-56,-57,-58,-59,-66,-67,-68,-69,-70,-71,-72,-61,-78,133,-47,-62,-49,146,-46,154,-47,-48,162,169,177,]),'RSB':([27,28,29,33,34,35,36,37,66,67,83,88,89,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,125,126,131,151,],[-46,50,-60,-73,-74,-75,-76,-77,-64,-65,120,125,-49,-63,-54,-55,-56,-57,-58,-59,-66,-67,-68,-69,-70,-71,-72,-61,-78,-47,-62,145,-48,]),'EQ':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,51,-60,-73,-74,-75,-76,-77,51,51,-64,-65,51,-46,51,51,-63,51,-54,-55,-56,-57,-58,-59,-66,-67,51,51,-70,-71,-72,51,-78,51,-47,-62,51,51,51,51,51,-46,51,51,-47,51,51,51,51,51,]),'GT':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,52,-60,-73,-74,-75,-76,-77,52,52,-64,-65,52,-46,52,52,-63,52,52,-55,-56,-57,-58,52,-66,-67,52,52,-70,-71,-72,52,-78,52,-47,-62,52,52,52,52,52,-46,52,52,-47,52,52,52,52,52,]),'GE':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,53,-60,-73,-74,-75,-76,-77,53,53,-64,-65,53,-46,53,53,-63,53,53,-55,-56,-57,-58,53,-66,-67,53,53,-70,-71,-72,53,-78,53,-47,-62,53,53,53,53,53,-46,53,53,-47,53,53,53,53,53,]),'LT':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,54,-60,-73,-74,-75,-76,-77,54,54,-64,-65,54,-46,54,54,-63,54,54,-55,-56,-57,-58,54,-66,-67,54,54,-70,-71,-72,54,-78,54,-47,-62,54,54,54,54,54,-46,54,54,-47,54,54,54,54,54,]),'LE':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,55,-60,-73,-74,-75,-76,-77,55,55,-64,-65,55,-46,55,55,-63,55,55,-55,-56,-57,-58,55,-66,-67,55,55,-70,-71,-72,55,-78,55,-47,-62,55,55,55,55,55,-46,55,55,-47,55,55,55,55,55,]),'NE':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,56,-60,-73,-74,-75,-76,-77,56,56,-64,-65,56,-46,56,56,-63,56,-54,-55,-56,-57,-58,-59,-66,-67,56,56,-70,-71,-72,56,-78,56,-47,-62,56,56,56,56,56,-46,56,56,-47,56,56,56,56,56,]),'SUM':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,57,-60,-73,-74,-75,-76,-77,57,57,-64,-65,57,-46,57,57,-63,57,57,57,57,57,57,57,-66,-67,57,57,-70,-71,-72,57,-78,57,-47,-62,57,57,57,57,57,-46,57,57,-47,57,57,57,57,57,]),'AND':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,59,-60,-73,-74,-75,-76,-77,59,59,-64,-65,59,-46,59,59,-63,59,-54,-55,-56,-57,-58,-59,-66,-67,-68,59,-70,-71,-72,59,-78,59,-47,-62,59,59,59,59,59,-46,59,59,-47,59,59,59,59,59,]),'OR':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,60,-60,-73,-74,-75,-76,-77,60,60,-64,-65,60,-46,60,60,-63,60,-54,-55,-56,-57,-58,-59,-66,-67,-68,-69,-70,-71,-72,60,-78,60,-47,-62,60,60,60,60,60,-46,60,60,-47,60,60,60,60,60,]),'MUL':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,61,-60,-73,-74,-75,-76,-77,61,61,61,-65,61,-46,61,61,-63,61,61,61,61,61,61,61,61,61,61,61,-70,-71,-72,61,-78,61,-47,-62,61,61,61,61,61,-46,61,61,-47,61,61,61,61,61,]),'DIV':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,62,-60,-73,-74,-75,-76,-77,62,62,62,-65,62,-46,62,62,-63,62,62,62,62,62,62,62,62,62,62,62,-70,-71,-72,62,-78,62,-47,-62,62,62,62,62,62,-46,62,62,-47,62,62,62,62,62,]),'MOD':([27,28,29,33,34,35,36,37,38,65,66,67,75,78,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,116,125,126,128,129,131,132,134,135,136,141,145,151,155,171,182,185,],[-46,63,-60,-73,-74,-75,-76,-77,63,63,63,-65,63,-46,63,63,-63,63,63,63,63,63,63,63,63,63,63,63,-70,-71,-72,63,-78,63,-47,-62,63,63,63,63,63,-46,63,63,-47,63,63,63,63,63,]),'RCB':([41,42,69,70,71,72,73,108,109,111,133,152,153,154,157,158,160,165,168,169,172,173,177,178,180,183,184,188,189,],[70,-27,108,-6,-9,-11,-12,-5,-10,-18,-17,-13,159,-16,-21,167,-37,-23,-38,-15,-20,-22,-14,-36,-24,-35,-19,-25,-26,]),'WHILE':([41,42,69,70,71,72,73,108,109,111,133,142,148,152,154,157,163,164,165,169,172,173,174,177,178,179,180,183,184,186,187,188,189,],[74,-27,74,-6,-9,-11,-12,-5,-10,-18,-17,74,74,-13,-16,-21,74,74,-23,-15,-20,-22,74,-14,74,74,-24,74,-19,74,74,-25,-26,]),'ON':([41,42,69,70,71,72,73,108,109,111,133,142,148,152,154,157,163,164,165,169,172,173,174,177,178,179,180,183,184,186,187,188,189,],[76,-27,76,-6,-9,-11,-12,-5,-10,-18,-17,76,76,-13,-16,-21,76,76,-23,-15,-20,-22,76,-14,76,76,-24,76,-19,76,76,-25,-26,]),'PRINT':([41,42,69,70,71,72,73,108,109,111,133,142,148,152,154,157,163,164,165,169,172,173,174,177,178,179,180,183,184,186,187,188,189,],[77,-27,77,-6,-9,-11,-12,-5,-10,-18,-17,77,77,-13,-16,-21,77,77,-23,-15,-20,-22,77,-14,77,77,-24,77,-19,77,77,-25,-26,]),'RETURN':([41,42,69,70,71,72,73,108,109,111,133,142,148,152,154,157,163,164,165,169,172,173,174,177,178,179,180,183,184,186,187,188,189,],[79,-27,79,-6,-9,-11,-12,-5,-10,-18,-17,79,79,-13,-16,-21,79,79,-23,-15,-20,-22,79,-14,79,79,-24,79,-19,79,79,-25,-26,]),'FOR':([41,42,69,70,71,72,73,108,109,111,133,142,148,152,154,157,163,164,165,169,172,173,174,177,178,179,180,183,184,186,187,188,189,],[80,-27,80,-6,-9,-11,-12,-5,-10,-18,-17,80,80,-13,-16,-21,80,80,-23,-15,-20,-22,80,-14,80,80,-24,80,-19,80,80,-25,-26,]),'IF':([41,42,69,70,71,72,73,108,109,111,133,142,148,152,154,157,163,164,165,169,172,173,174,177,178,179,180,183,184,186,187,188,189,],[81,-27,81,-6,-9,-11,-12,-5,-10,-18,-17,81,81,-13,-16,-21,81,81,-23,-15,-20,-22,81,-14,81,81,-24,81,-19,81,81,-25,-26,]),'ELSE':([42,70,72,73,108,111,133,152,154,157,165,169,172,173,177,180,184,188,189,],[-27,-6,-11,-12,-5,-18,-17,-13,-16,164,174,-15,-20,-22,-14,-24,-19,-25,-26,]),'ELSEIF':([42,70,72,73,108,111,133,152,154,157,165,169,172,173,177,180,184,188,189,],[-27,-6,-11,-12,-5,-18,-17,-13,-16,166,175,-15,-20,-22,-14,-24,-19,-25,-26,]),'WHERE':([42,70,71,72,73,108,109,111,133,152,153,154,157,158,160,165,168,169,172,173,177,178,180,183,184,188,189,],[-27,-6,-9,-11,-12,-5,-10,-18,-17,-13,161,-16,-21,161,-37,-23,-38,-15,-20,-22,-14,-36,-24,-35,-19,-25,-26,]),'IN':([135,],[147,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declist':([0,],[2,]),'dec':([0,2,],[4,12,]),'vardec':([0,2,41,69,142,148,163,164,174,178,179,183,186,187,],[5,5,73,73,73,73,73,73,73,73,73,73,73,73,]),'funcdec':([0,2,],[6,6,]),'idlist':([0,2,41,69,142,148,163,164,174,178,179,183,186,187,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'iddec':([0,2,15,41,69,142,148,163,164,174,178,179,183,186,187,],[10,10,25,10,10,10,10,10,10,10,10,10,10,10,10,]),'type':([14,82,86,121,137,],[21,119,124,138,149,]),'expression':([17,18,30,31,32,41,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,79,110,112,114,115,117,118,127,140,142,146,148,162,163,164,174,176,178,179,181,183,186,187,],[28,38,65,66,67,75,88,89,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,75,116,128,129,131,132,134,136,141,151,75,155,75,171,75,75,75,182,75,75,185,75,75,75,]),'lvalue':([17,18,30,31,32,41,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,79,110,112,114,115,117,118,127,140,142,146,148,162,163,164,174,176,178,179,181,183,186,187,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'factor':([17,18,30,31,32,41,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,69,79,110,112,114,115,117,118,127,140,142,146,148,161,162,163,164,174,176,178,179,181,183,186,187,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,170,33,33,33,33,33,33,33,33,33,33,33,]),'block':([20,39,41,45,69,84,124,138,142,148,163,164,174,178,179,183,186,187,],[40,68,72,87,72,122,139,150,72,72,72,72,72,72,72,72,72,72,]),'paramdecslist':([26,],[44,]),'paramdec':([26,85,],[46,123,]),'stmtlist':([41,178,],[69,183,]),'stmt':([41,69,142,148,163,164,174,178,179,183,186,187,],[71,109,152,157,172,173,180,71,184,109,188,189,]),'explist':([49,],[90,]),'cases':([153,],[158,]),'case':([153,158,],[160,168,]),'elseiflist':([157,],[165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declist MAIN LRB RRB block','program',5,'p_program_declist','m_parser.py',14),
  ('program -> MAIN LRB RRB block','program',4,'p_program','m_parser.py',19),
  ('declist -> dec','declist',1,'p_declist_dec','m_parser.py',25),
  ('declist -> declist dec','declist',2,'p_declist_declist_dec','m_parser.py',30),
  ('block -> LCB stmtlist RCB','block',3,'p_block','m_parser.py',36),
  ('block -> LCB RCB','block',2,'p_block_empty','m_parser.py',41),
  ('dec -> vardec','dec',1,'p_dec_vardec','m_parser.py',47),
  ('dec -> funcdec','dec',1,'p_dec_funcdec','m_parser.py',52),
  ('stmtlist -> stmt','stmtlist',1,'p_stmtlist_stmt','m_parser.py',58),
  ('stmtlist -> stmtlist stmt','stmtlist',2,'p_stmtlist_stmtlist','m_parser.py',63),
  ('stmt -> block','stmt',1,'p_stmt_block','m_parser.py',69),
  ('stmt -> vardec','stmt',1,'p_stmt_vardec','m_parser.py',74),
  ('stmt -> WHILE LRB expression RRB stmt','stmt',5,'p_stmt_while','m_parser.py',79),
  ('stmt -> ON LRB expression RRB LCB cases RCB SEMICOLON','stmt',8,'p_stmt_on_cases','m_parser.py',87),
  ('stmt -> ON LRB expression RRB LCB RCB SEMICOLON','stmt',7,'p_stmt_on_cases_emsilan','m_parser.py',95),
  ('stmt -> PRINT LRB ID RRB SEMICOLON','stmt',5,'p_stmt_print','m_parser.py',103),
  ('stmt -> RETURN expression SEMICOLON','stmt',3,'p_stmt_return_exp','m_parser.py',108),
  ('stmt -> expression SEMICOLON','stmt',2,'p_stmt_exp','m_parser.py',113),
  ('stmt -> FOR LRB expression SEMICOLON expression SEMICOLON expression RRB stmt','stmt',9,'p_stmt_for_exp','m_parser.py',118),
  ('stmt -> FOR LRB ID IN ID RRB stmt','stmt',7,'p_stmt_for_id','m_parser.py',126),
  ('stmt -> IF LRB expression RRB stmt','stmt',5,'p_stmt_if','m_parser.py',131),
  ('stmt -> IF LRB expression RRB stmt ELSE stmt','stmt',7,'p_stmt_if_2','m_parser.py',136),
  ('stmt -> IF LRB expression RRB stmt elseiflist','stmt',6,'p_stmt_if_3','m_parser.py',141),
  ('stmt -> IF LRB expression RRB stmt elseiflist ELSE stmt','stmt',8,'p_stmt_if_4','m_parser.py',146),
  ('elseiflist -> ELSEIF LRB expression RRB stmt','elseiflist',5,'p_elseiflist_elseif','m_parser.py',152),
  ('elseiflist -> elseiflist ELSEIF LRB expression RRB stmt','elseiflist',6,'p_elseiflist_elseiflist','m_parser.py',160),
  ('vardec -> idlist COLON type SEMICOLON','vardec',4,'p_vardec','m_parser.py',215),
  ('funcdec -> FUNCTION ID LRB paramdecslist RRB COLON type block','funcdec',8,'p_funcdec_type','m_parser.py',221),
  ('funcdec -> FUNCTION ID LRB RRB COLON type block','funcdec',7,'p_funcdec_type_empty','m_parser.py',229),
  ('funcdec -> FUNCTION ID LRB paramdecslist RRB block','funcdec',6,'p_funcdec_id','m_parser.py',237),
  ('funcdec -> FUNCTION ID LRB RRB block','funcdec',5,'p_funcdec_id_empty','m_parser.py',245),
  ('type -> INTEGER','type',1,'p_type_int','m_parser.py',254),
  ('type -> FLOAT','type',1,'p_type_float','m_parser.py',259),
  ('type -> BOOLEAN','type',1,'p_type_bool','m_parser.py',264),
  ('case -> WHERE factor COLON stmtlist','case',4,'p_case','m_parser.py',270),
  ('case -> WHERE factor COLON','case',3,'p_case_empty_stmtlist','m_parser.py',275),
  ('cases -> case','cases',1,'p_cases_case','m_parser.py',280),
  ('cases -> cases case','cases',2,'p_cases_cases','m_parser.py',285),
  ('idlist -> iddec','idlist',1,'p_idlist_iddec','m_parser.py',297),
  ('idlist -> idlist COMMA iddec','idlist',3,'p_idlist_comma_iddec','m_parser.py',302),
  ('paramdecslist -> paramdec','paramdecslist',1,'p_paramdecslist_paramdec','m_parser.py',318),
  ('paramdecslist -> paramdecslist COMMA paramdec','paramdecslist',3,'p_paramdecslist_comma_paramdec','m_parser.py',323),
  ('iddec -> ID','iddec',1,'p_iddec_id','m_parser.py',330),
  ('iddec -> ID LSB expression RSB','iddec',4,'p_iddec_id_exp','m_parser.py',335),
  ('iddec -> ID ASSIGN expression','iddec',3,'p_iddec_id_assign_exp','m_parser.py',340),
  ('lvalue -> ID','lvalue',1,'p_lvalue_id_exp','m_parser.py',346),
  ('lvalue -> ID LSB expression RSB','lvalue',4,'p_lvalue_id_sb','m_parser.py',351),
  ('expression -> ID LSB expression RSB ASSIGN expression','expression',6,'p_exp_id_assign_sb','m_parser.py',356),
  ('expression -> ID ASSIGN expression','expression',3,'p_exp_id_assign','m_parser.py',361),
  ('paramdec -> ID COLON type','paramdec',3,'p_paramdec_id','m_parser.py',367),
  ('paramdec -> ID LSB RSB COLON type','paramdec',5,'p_paramdec_id_bracket','m_parser.py',372),
  ('explist -> expression','explist',1,'p_explist_exp','m_parser.py',378),
  ('explist -> explist COMMA expression','explist',3,'p_explist_explist','m_parser.py',383),
  ('expression -> expression EQ expression','expression',3,'p_relop_exp_eq','m_parser.py',392),
  ('expression -> expression GT expression','expression',3,'p_relop_exp_gt','m_parser.py',397),
  ('expression -> expression GE expression','expression',3,'p_relop_exp_ge','m_parser.py',402),
  ('expression -> expression LT expression','expression',3,'p_relop_exp_lt','m_parser.py',407),
  ('expression -> expression LE expression','expression',3,'p_relop_exp_le','m_parser.py',412),
  ('expression -> expression NE expression','expression',3,'p_relop_exp_ne','m_parser.py',417),
  ('expression -> lvalue','expression',1,'p_expression_val','m_parser.py',423),
  ('expression -> lvalue ASSIGN expression','expression',3,'p_expression_val_exp','m_parser.py',428),
  ('expression -> ID LRB explist RRB','expression',4,'p_expression_id_bracket_exp','m_parser.py',433),
  ('expression -> ID LRB RRB','expression',3,'p_expression_id__bracket','m_parser.py',438),
  ('expression -> SUB expression','expression',2,'p_expression_minus_exp','m_parser.py',443),
  ('expression -> NOT expression','expression',2,'p_expression_not_exp','m_parser.py',453),
  ('expression -> expression SUM expression','expression',3,'p_expression_plus','m_parser.py',458),
  ('expression -> expression SUB expression','expression',3,'p_expression_minus','m_parser.py',463),
  ('expression -> expression AND expression','expression',3,'p_expression_and','m_parser.py',468),
  ('expression -> expression OR expression','expression',3,'p_expression_or','m_parser.py',473),
  ('expression -> expression MUL expression','expression',3,'p_expression_times','m_parser.py',483),
  ('expression -> expression DIV expression','expression',3,'p_expression_div','m_parser.py',488),
  ('expression -> expression MOD expression','expression',3,'p_expression_MOD','m_parser.py',493),
  ('expression -> factor','expression',1,'p_expression_factor','m_parser.py',498),
  ('factor -> INTEGERNUMBER','factor',1,'p_factor_num','m_parser.py',503),
  ('factor -> FLOATNUMBER','factor',1,'p_factor_float','m_parser.py',508),
  ('factor -> TRUE','factor',1,'p_factor_true','m_parser.py',513),
  ('factor -> FALSE','factor',1,'p_factor_false','m_parser.py',518),
  ('factor -> LRB expression RRB','factor',3,'p_factor_expr','m_parser.py',523),
]
